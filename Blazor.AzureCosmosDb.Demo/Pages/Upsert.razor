@page "/upsert"
@page "/upsert/{id}"
@inject IEngineerService engineerService;
@inject NavigationManager NavManager;

<h3>Upsert Engineer</h3>
<EditForm Model="@engineer">
    <div class="form-group row p-2">
        <input type="hidden" @bind-value="engineer.id" />
        <div class="col-md-6">
            <input type="text" class="form-control" placeholder="Name" @bind-value="engineer.Name" />
        </div>

        <div class="col-md-6">
            <input type="text" class="form-control" placeholder="Country" @bind-value="engineer.Country" />
        </div>
    </div>
    <div class="form-group row p-2">

        <div class="col-md-6">
            <input type="text" class="form-control" placeholder="Specialty" @bind-value="engineer.Specialty" />
        </div>
    </div>
    
    <div class="form-group row p-2">
        <div class="text-center">
            <button class="btn btn-primary" @onclick="@(async () => await SaveEngineer())">Save</button>
        </div>
    </div>
</EditForm>

@code {
    Engineer engineer = new();

    [Parameter]
    public string? id { get; set; }

    protected async override Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(id))
        {
            engineer = await engineerService.GetEngineerDetailsById(id, id);
        }
    }

    private async Task SaveEngineer()
    {
        await engineerService.UpsertEngineer(engineer);
        NavManager.NavigateTo("/");
    }
}
